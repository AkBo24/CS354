
Escape:     file format elf32-i386


Disassembly of section .init:

00001000 <_init>:
    1000:	f3 0f 1e fb          	endbr32 
    1004:	53                   	push   %ebx
    1005:	83 ec 08             	sub    $0x8,%esp
    1008:	e8 43 01 00 00       	call   1150 <__x86.get_pc_thunk.bx>
    100d:	81 c3 bb 2f 00 00    	add    $0x2fbb,%ebx
    1013:	8b 83 2c 00 00 00    	mov    0x2c(%ebx),%eax
    1019:	85 c0                	test   %eax,%eax
    101b:	74 02                	je     101f <_init+0x1f>
    101d:	ff d0                	call   *%eax
    101f:	83 c4 08             	add    $0x8,%esp
    1022:	5b                   	pop    %ebx
    1023:	c3                   	ret    

Disassembly of section .plt:

00001030 <.plt>:
    1030:	ff b3 04 00 00 00    	pushl  0x4(%ebx)
    1036:	ff a3 08 00 00 00    	jmp    *0x8(%ebx)
    103c:	0f 1f 40 00          	nopl   0x0(%eax)
    1040:	f3 0f 1e fb          	endbr32 
    1044:	68 00 00 00 00       	push   $0x0
    1049:	e9 e2 ff ff ff       	jmp    1030 <.plt>
    104e:	66 90                	xchg   %ax,%ax
    1050:	f3 0f 1e fb          	endbr32 
    1054:	68 08 00 00 00       	push   $0x8
    1059:	e9 d2 ff ff ff       	jmp    1030 <.plt>
    105e:	66 90                	xchg   %ax,%ax
    1060:	f3 0f 1e fb          	endbr32 
    1064:	68 10 00 00 00       	push   $0x10
    1069:	e9 c2 ff ff ff       	jmp    1030 <.plt>
    106e:	66 90                	xchg   %ax,%ax
    1070:	f3 0f 1e fb          	endbr32 
    1074:	68 18 00 00 00       	push   $0x18
    1079:	e9 b2 ff ff ff       	jmp    1030 <.plt>
    107e:	66 90                	xchg   %ax,%ax
    1080:	f3 0f 1e fb          	endbr32 
    1084:	68 20 00 00 00       	push   $0x20
    1089:	e9 a2 ff ff ff       	jmp    1030 <.plt>
    108e:	66 90                	xchg   %ax,%ax
    1090:	f3 0f 1e fb          	endbr32 
    1094:	68 28 00 00 00       	push   $0x28
    1099:	e9 92 ff ff ff       	jmp    1030 <.plt>
    109e:	66 90                	xchg   %ax,%ax

Disassembly of section .plt.got:

000010a0 <__cxa_finalize@plt>:
    10a0:	f3 0f 1e fb          	endbr32 
    10a4:	ff a3 28 00 00 00    	jmp    *0x28(%ebx)
    10aa:	66 0f 1f 44 00 00    	nopw   0x0(%eax,%eax,1)

Disassembly of section .plt.sec:

000010b0 <printf@plt>:
    10b0:	f3 0f 1e fb          	endbr32 
    10b4:	ff a3 0c 00 00 00    	jmp    *0xc(%ebx)
    10ba:	66 0f 1f 44 00 00    	nopw   0x0(%eax,%eax,1)

000010c0 <__stack_chk_fail@plt>:
    10c0:	f3 0f 1e fb          	endbr32 
    10c4:	ff a3 10 00 00 00    	jmp    *0x10(%ebx)
    10ca:	66 0f 1f 44 00 00    	nopw   0x0(%eax,%eax,1)

000010d0 <malloc@plt>:
    10d0:	f3 0f 1e fb          	endbr32 
    10d4:	ff a3 14 00 00 00    	jmp    *0x14(%ebx)
    10da:	66 0f 1f 44 00 00    	nopw   0x0(%eax,%eax,1)

000010e0 <puts@plt>:
    10e0:	f3 0f 1e fb          	endbr32 
    10e4:	ff a3 18 00 00 00    	jmp    *0x18(%ebx)
    10ea:	66 0f 1f 44 00 00    	nopw   0x0(%eax,%eax,1)

000010f0 <__libc_start_main@plt>:
    10f0:	f3 0f 1e fb          	endbr32 
    10f4:	ff a3 1c 00 00 00    	jmp    *0x1c(%ebx)
    10fa:	66 0f 1f 44 00 00    	nopw   0x0(%eax,%eax,1)

00001100 <__isoc99_scanf@plt>:
    1100:	f3 0f 1e fb          	endbr32 
    1104:	ff a3 20 00 00 00    	jmp    *0x20(%ebx)
    110a:	66 0f 1f 44 00 00    	nopw   0x0(%eax,%eax,1)

Disassembly of section .text:

00001110 <_start>:
    1110:	f3 0f 1e fb          	endbr32 
    1114:	31 ed                	xor    %ebp,%ebp
    1116:	5e                   	pop    %esi
    1117:	89 e1                	mov    %esp,%ecx
    1119:	83 e4 f0             	and    $0xfffffff0,%esp
    111c:	50                   	push   %eax
    111d:	54                   	push   %esp
    111e:	52                   	push   %edx
    111f:	e8 22 00 00 00       	call   1146 <_start+0x36>
    1124:	81 c3 a4 2e 00 00    	add    $0x2ea4,%ebx
    112a:	8d 83 a8 d7 ff ff    	lea    -0x2858(%ebx),%eax
    1130:	50                   	push   %eax
    1131:	8d 83 38 d7 ff ff    	lea    -0x28c8(%ebx),%eax
    1137:	50                   	push   %eax
    1138:	51                   	push   %ecx
    1139:	56                   	push   %esi
    113a:	ff b3 30 00 00 00    	pushl  0x30(%ebx)
    1140:	e8 ab ff ff ff       	call   10f0 <__libc_start_main@plt>
    1145:	f4                   	hlt    
    1146:	8b 1c 24             	mov    (%esp),%ebx
    1149:	c3                   	ret    
    114a:	66 90                	xchg   %ax,%ax
    114c:	66 90                	xchg   %ax,%ax
    114e:	66 90                	xchg   %ax,%ax

00001150 <__x86.get_pc_thunk.bx>:
    1150:	8b 1c 24             	mov    (%esp),%ebx
    1153:	c3                   	ret    
    1154:	66 90                	xchg   %ax,%ax
    1156:	66 90                	xchg   %ax,%ax
    1158:	66 90                	xchg   %ax,%ax
    115a:	66 90                	xchg   %ax,%ax
    115c:	66 90                	xchg   %ax,%ax
    115e:	66 90                	xchg   %ax,%ax

00001160 <deregister_tm_clones>:
    1160:	e8 e4 00 00 00       	call   1249 <__x86.get_pc_thunk.dx>
    1165:	81 c2 63 2e 00 00    	add    $0x2e63,%edx
    116b:	8d 8a 40 00 00 00    	lea    0x40(%edx),%ecx
    1171:	8d 82 40 00 00 00    	lea    0x40(%edx),%eax
    1177:	39 c8                	cmp    %ecx,%eax
    1179:	74 1d                	je     1198 <deregister_tm_clones+0x38>
    117b:	8b 82 24 00 00 00    	mov    0x24(%edx),%eax
    1181:	85 c0                	test   %eax,%eax
    1183:	74 13                	je     1198 <deregister_tm_clones+0x38>
    1185:	55                   	push   %ebp
    1186:	89 e5                	mov    %esp,%ebp
    1188:	83 ec 14             	sub    $0x14,%esp
    118b:	51                   	push   %ecx
    118c:	ff d0                	call   *%eax
    118e:	83 c4 10             	add    $0x10,%esp
    1191:	c9                   	leave  
    1192:	c3                   	ret    
    1193:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    1197:	90                   	nop
    1198:	c3                   	ret    
    1199:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

000011a0 <register_tm_clones>:
    11a0:	e8 a4 00 00 00       	call   1249 <__x86.get_pc_thunk.dx>
    11a5:	81 c2 23 2e 00 00    	add    $0x2e23,%edx
    11ab:	55                   	push   %ebp
    11ac:	89 e5                	mov    %esp,%ebp
    11ae:	53                   	push   %ebx
    11af:	8d 8a 40 00 00 00    	lea    0x40(%edx),%ecx
    11b5:	8d 82 40 00 00 00    	lea    0x40(%edx),%eax
    11bb:	83 ec 04             	sub    $0x4,%esp
    11be:	29 c8                	sub    %ecx,%eax
    11c0:	89 c3                	mov    %eax,%ebx
    11c2:	c1 e8 1f             	shr    $0x1f,%eax
    11c5:	c1 fb 02             	sar    $0x2,%ebx
    11c8:	01 d8                	add    %ebx,%eax
    11ca:	d1 f8                	sar    %eax
    11cc:	74 14                	je     11e2 <register_tm_clones+0x42>
    11ce:	8b 92 34 00 00 00    	mov    0x34(%edx),%edx
    11d4:	85 d2                	test   %edx,%edx
    11d6:	74 0a                	je     11e2 <register_tm_clones+0x42>
    11d8:	83 ec 08             	sub    $0x8,%esp
    11db:	50                   	push   %eax
    11dc:	51                   	push   %ecx
    11dd:	ff d2                	call   *%edx
    11df:	83 c4 10             	add    $0x10,%esp
    11e2:	8b 5d fc             	mov    -0x4(%ebp),%ebx
    11e5:	c9                   	leave  
    11e6:	c3                   	ret    
    11e7:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    11ee:	66 90                	xchg   %ax,%ax

000011f0 <__do_global_dtors_aux>:
    11f0:	f3 0f 1e fb          	endbr32 
    11f4:	55                   	push   %ebp
    11f5:	89 e5                	mov    %esp,%ebp
    11f7:	53                   	push   %ebx
    11f8:	e8 53 ff ff ff       	call   1150 <__x86.get_pc_thunk.bx>
    11fd:	81 c3 cb 2d 00 00    	add    $0x2dcb,%ebx
    1203:	83 ec 04             	sub    $0x4,%esp
    1206:	80 bb 40 00 00 00 00 	cmpb   $0x0,0x40(%ebx)
    120d:	75 27                	jne    1236 <__do_global_dtors_aux+0x46>
    120f:	8b 83 28 00 00 00    	mov    0x28(%ebx),%eax
    1215:	85 c0                	test   %eax,%eax
    1217:	74 11                	je     122a <__do_global_dtors_aux+0x3a>
    1219:	83 ec 0c             	sub    $0xc,%esp
    121c:	ff b3 3c 00 00 00    	pushl  0x3c(%ebx)
    1222:	e8 79 fe ff ff       	call   10a0 <__cxa_finalize@plt>
    1227:	83 c4 10             	add    $0x10,%esp
    122a:	e8 31 ff ff ff       	call   1160 <deregister_tm_clones>
    122f:	c6 83 40 00 00 00 01 	movb   $0x1,0x40(%ebx)
    1236:	8b 5d fc             	mov    -0x4(%ebp),%ebx
    1239:	c9                   	leave  
    123a:	c3                   	ret    
    123b:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
    123f:	90                   	nop

00001240 <frame_dummy>:
    1240:	f3 0f 1e fb          	endbr32 
    1244:	e9 57 ff ff ff       	jmp    11a0 <register_tm_clones>

00001249 <__x86.get_pc_thunk.dx>:
    1249:	8b 14 24             	mov    (%esp),%edx
    124c:	c3                   	ret    

0000124d <Is_Number_Correct>:
    124d:	f3 0f 1e fb          	endbr32 
    1251:	55                   	push   %ebp
    1252:	89 e5                	mov    %esp,%ebp
    1254:	53                   	push   %ebx
    1255:	83 ec 04             	sub    $0x4,%esp
    1258:	e8 98 04 00 00       	call   16f5 <__x86.get_pc_thunk.ax>
    125d:	05 6b 2d 00 00       	add    $0x2d6b,%eax
    1262:	8b 55 0c             	mov    0xc(%ebp),%edx
    1265:	3b 55 08             	cmp    0x8(%ebp),%edx
    1268:	75 1e                	jne    1288 <Is_Number_Correct+0x3b>
    126a:	83 ec 08             	sub    $0x8,%esp
    126d:	ff 75 10             	pushl  0x10(%ebp)
    1270:	8d 90 40 e0 ff ff    	lea    -0x1fc0(%eax),%edx
    1276:	52                   	push   %edx
    1277:	89 c3                	mov    %eax,%ebx
    1279:	e8 32 fe ff ff       	call   10b0 <printf@plt>
    127e:	83 c4 10             	add    $0x10,%esp
    1281:	b8 01 00 00 00       	mov    $0x1,%eax
    1286:	eb 1c                	jmp    12a4 <Is_Number_Correct+0x57>
    1288:	83 ec 08             	sub    $0x8,%esp
    128b:	ff 75 10             	pushl  0x10(%ebp)
    128e:	8d 90 5e e0 ff ff    	lea    -0x1fa2(%eax),%edx
    1294:	52                   	push   %edx
    1295:	89 c3                	mov    %eax,%ebx
    1297:	e8 14 fe ff ff       	call   10b0 <printf@plt>
    129c:	83 c4 10             	add    $0x10,%esp
    129f:	b8 00 00 00 00       	mov    $0x0,%eax
    12a4:	8b 5d fc             	mov    -0x4(%ebp),%ebx
    12a7:	c9                   	leave  
    12a8:	c3                   	ret    

000012a9 <f0>:
    12a9:	f3 0f 1e fb          	endbr32 
    12ad:	55                   	push   %ebp
    12ae:	89 e5                	mov    %esp,%ebp
    12b0:	e8 40 04 00 00       	call   16f5 <__x86.get_pc_thunk.ax>
    12b5:	05 13 2d 00 00       	add    $0x2d13,%eax
    12ba:	b8 f6 13 02 00       	mov    $0x213f6,%eax
    12bf:	5d                   	pop    %ebp
    12c0:	c3                   	ret    

000012c1 <f1>:
    12c1:	f3 0f 1e fb          	endbr32 
    12c5:	55                   	push   %ebp
    12c6:	89 e5                	mov    %esp,%ebp
    12c8:	83 ec 10             	sub    $0x10,%esp
    12cb:	e8 25 04 00 00       	call   16f5 <__x86.get_pc_thunk.ax>
    12d0:	05 f8 2c 00 00       	add    $0x2cf8,%eax
    12d5:	c7 45 f0 47 4e ac 01 	movl   $0x1ac4e47,-0x10(%ebp)
    12dc:	c7 45 f4 be 70 02 00 	movl   $0x270be,-0xc(%ebp)
    12e3:	c7 45 f8 ce ff 01 00 	movl   $0x1ffce,-0x8(%ebp)
    12ea:	c7 45 fc ed 27 03 00 	movl   $0x327ed,-0x4(%ebp)
    12f1:	8b 45 f0             	mov    -0x10(%ebp),%eax
    12f4:	3b 45 f8             	cmp    -0x8(%ebp),%eax
    12f7:	7e 2a                	jle    1323 <f1+0x62>
    12f9:	8b 45 f0             	mov    -0x10(%ebp),%eax
    12fc:	3b 45 f4             	cmp    -0xc(%ebp),%eax
    12ff:	75 1a                	jne    131b <f1+0x5a>
    1301:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
    1305:	74 0d                	je     1314 <f1+0x53>
    1307:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
    130b:	74 07                	je     1314 <f1+0x53>
    130d:	b8 01 00 00 00       	mov    $0x1,%eax
    1312:	eb 33                	jmp    1347 <f1+0x86>
    1314:	b8 00 00 00 00       	mov    $0x0,%eax
    1319:	eb 2c                	jmp    1347 <f1+0x86>
    131b:	8b 45 f8             	mov    -0x8(%ebp),%eax
    131e:	c1 f8 02             	sar    $0x2,%eax
    1321:	eb 24                	jmp    1347 <f1+0x86>
    1323:	8b 45 f4             	mov    -0xc(%ebp),%eax
    1326:	3b 45 f8             	cmp    -0x8(%ebp),%eax
    1329:	7f 05                	jg     1330 <f1+0x6f>
    132b:	8b 45 f4             	mov    -0xc(%ebp),%eax
    132e:	eb 17                	jmp    1347 <f1+0x86>
    1330:	8b 45 f4             	mov    -0xc(%ebp),%eax
    1333:	3b 45 fc             	cmp    -0x4(%ebp),%eax
    1336:	7e 08                	jle    1340 <f1+0x7f>
    1338:	8b 45 f8             	mov    -0x8(%ebp),%eax
    133b:	33 45 fc             	xor    -0x4(%ebp),%eax
    133e:	eb 07                	jmp    1347 <f1+0x86>
    1340:	8b 45 f0             	mov    -0x10(%ebp),%eax
    1343:	99                   	cltd   
    1344:	f7 7d f4             	idivl  -0xc(%ebp)
    1347:	c9                   	leave  
    1348:	c3                   	ret    

00001349 <f2>:
    1349:	f3 0f 1e fb          	endbr32 
    134d:	55                   	push   %ebp
    134e:	89 e5                	mov    %esp,%ebp
    1350:	83 ec 10             	sub    $0x10,%esp
    1353:	e8 9d 03 00 00       	call   16f5 <__x86.get_pc_thunk.ax>
    1358:	05 70 2c 00 00       	add    $0x2c70,%eax
    135d:	c7 45 f8 ff ff ff ff 	movl   $0xffffffff,-0x8(%ebp)
    1364:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%ebp)
    136b:	eb 10                	jmp    137d <f2+0x34>
    136d:	8b 45 f8             	mov    -0x8(%ebp),%eax
    1370:	0f af c0             	imul   %eax,%eax
    1373:	89 c2                	mov    %eax,%edx
    1375:	8b 45 08             	mov    0x8(%ebp),%eax
    1378:	01 d0                	add    %edx,%eax
    137a:	01 45 fc             	add    %eax,-0x4(%ebp)
    137d:	8b 45 f8             	mov    -0x8(%ebp),%eax
    1380:	8d 50 01             	lea    0x1(%eax),%edx
    1383:	89 55 f8             	mov    %edx,-0x8(%ebp)
    1386:	83 f8 14             	cmp    $0x14,%eax
    1389:	7e e2                	jle    136d <f2+0x24>
    138b:	8b 45 fc             	mov    -0x4(%ebp),%eax
    138e:	c9                   	leave  
    138f:	c3                   	ret    

00001390 <f3>:
    1390:	f3 0f 1e fb          	endbr32 
    1394:	55                   	push   %ebp
    1395:	89 e5                	mov    %esp,%ebp
    1397:	e8 59 03 00 00       	call   16f5 <__x86.get_pc_thunk.ax>
    139c:	05 2c 2c 00 00       	add    $0x2c2c,%eax
    13a1:	8b 45 0c             	mov    0xc(%ebp),%eax
    13a4:	8b 00                	mov    (%eax),%eax
    13a6:	8b 55 08             	mov    0x8(%ebp),%edx
    13a9:	c1 e2 03             	shl    $0x3,%edx
    13ac:	01 c2                	add    %eax,%edx
    13ae:	8b 45 0c             	mov    0xc(%ebp),%eax
    13b1:	89 10                	mov    %edx,(%eax)
    13b3:	8b 45 0c             	mov    0xc(%ebp),%eax
    13b6:	8b 00                	mov    (%eax),%eax
    13b8:	69 d0 ab aa aa 2a    	imul   $0x2aaaaaab,%eax,%edx
    13be:	8b 45 0c             	mov    0xc(%ebp),%eax
    13c1:	89 10                	mov    %edx,(%eax)
    13c3:	90                   	nop
    13c4:	5d                   	pop    %ebp
    13c5:	c3                   	ret    

000013c6 <f4_helper>:
    13c6:	f3 0f 1e fb          	endbr32 
    13ca:	55                   	push   %ebp
    13cb:	89 e5                	mov    %esp,%ebp
    13cd:	83 ec 10             	sub    $0x10,%esp
    13d0:	e8 20 03 00 00       	call   16f5 <__x86.get_pc_thunk.ax>
    13d5:	05 f3 2b 00 00       	add    $0x2bf3,%eax
    13da:	c7 45 fc 02 00 00 00 	movl   $0x2,-0x4(%ebp)
    13e1:	8b 45 08             	mov    0x8(%ebp),%eax
    13e4:	0f af 45 fc          	imul   -0x4(%ebp),%eax
    13e8:	c9                   	leave  
    13e9:	c3                   	ret    

000013ea <f4>:
    13ea:	f3 0f 1e fb          	endbr32 
    13ee:	55                   	push   %ebp
    13ef:	89 e5                	mov    %esp,%ebp
    13f1:	e8 ff 02 00 00       	call   16f5 <__x86.get_pc_thunk.ax>
    13f6:	05 d2 2b 00 00       	add    $0x2bd2,%eax
    13fb:	ff 75 08             	pushl  0x8(%ebp)
    13fe:	e8 c3 ff ff ff       	call   13c6 <f4_helper>
    1403:	83 c4 04             	add    $0x4,%esp
    1406:	89 45 08             	mov    %eax,0x8(%ebp)
    1409:	ff 75 0c             	pushl  0xc(%ebp)
    140c:	e8 b5 ff ff ff       	call   13c6 <f4_helper>
    1411:	83 c4 04             	add    $0x4,%esp
    1414:	89 45 0c             	mov    %eax,0xc(%ebp)
    1417:	ff 75 10             	pushl  0x10(%ebp)
    141a:	e8 a7 ff ff ff       	call   13c6 <f4_helper>
    141f:	83 c4 04             	add    $0x4,%esp
    1422:	89 45 10             	mov    %eax,0x10(%ebp)
    1425:	8b 55 08             	mov    0x8(%ebp),%edx
    1428:	8b 45 0c             	mov    0xc(%ebp),%eax
    142b:	01 c2                	add    %eax,%edx
    142d:	8b 45 10             	mov    0x10(%ebp),%eax
    1430:	01 d0                	add    %edx,%eax
    1432:	c9                   	leave  
    1433:	c3                   	ret    

00001434 <f5>:
    1434:	f3 0f 1e fb          	endbr32 
    1438:	55                   	push   %ebp
    1439:	89 e5                	mov    %esp,%ebp
    143b:	83 ec 48             	sub    $0x48,%esp
    143e:	e8 b2 02 00 00       	call   16f5 <__x86.get_pc_thunk.ax>
    1443:	05 85 2b 00 00       	add    $0x2b85,%eax
    1448:	8b 45 08             	mov    0x8(%ebp),%eax
    144b:	89 45 c4             	mov    %eax,-0x3c(%ebp)
    144e:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
    1454:	89 45 f4             	mov    %eax,-0xc(%ebp)
    1457:	31 c0                	xor    %eax,%eax
    1459:	c7 45 d0 84 24 00 00 	movl   $0x2484,-0x30(%ebp)
    1460:	c7 45 d4 75 0f 00 00 	movl   $0xf75,-0x2c(%ebp)
    1467:	c7 45 d8 21 0b 00 00 	movl   $0xb21,-0x28(%ebp)
    146e:	c7 45 dc 00 08 00 00 	movl   $0x800,-0x24(%ebp)
    1475:	c7 45 e0 1c 1d 00 00 	movl   $0x1d1c,-0x20(%ebp)
    147c:	c7 45 e4 84 24 00 00 	movl   $0x2484,-0x1c(%ebp)
    1483:	c7 45 e8 75 0f 00 00 	movl   $0xf75,-0x18(%ebp)
    148a:	c7 45 ec 21 0b 00 00 	movl   $0xb21,-0x14(%ebp)
    1491:	c7 45 f0 00 08 00 00 	movl   $0x800,-0x10(%ebp)
    1498:	8b 45 c4             	mov    -0x3c(%ebp),%eax
    149b:	83 c0 14             	add    $0x14,%eax
    149e:	c7 00 00 00 00 00    	movl   $0x0,(%eax)
    14a4:	c7 45 cc 00 00 00 00 	movl   $0x0,-0x34(%ebp)
    14ab:	eb 1d                	jmp    14ca <f5+0x96>
    14ad:	8b 45 c4             	mov    -0x3c(%ebp),%eax
    14b0:	83 c0 14             	add    $0x14,%eax
    14b3:	8b 08                	mov    (%eax),%ecx
    14b5:	8b 45 cc             	mov    -0x34(%ebp),%eax
    14b8:	8b 54 85 d0          	mov    -0x30(%ebp,%eax,4),%edx
    14bc:	8b 45 c4             	mov    -0x3c(%ebp),%eax
    14bf:	83 c0 14             	add    $0x14,%eax
    14c2:	01 ca                	add    %ecx,%edx
    14c4:	89 10                	mov    %edx,(%eax)
    14c6:	83 45 cc 01          	addl   $0x1,-0x34(%ebp)
    14ca:	83 7d cc 04          	cmpl   $0x4,-0x34(%ebp)
    14ce:	7e dd                	jle    14ad <f5+0x79>
    14d0:	90                   	nop
    14d1:	8b 45 f4             	mov    -0xc(%ebp),%eax
    14d4:	65 33 05 14 00 00 00 	xor    %gs:0x14,%eax
    14db:	74 05                	je     14e2 <f5+0xae>
    14dd:	e8 9e 02 00 00       	call   1780 <__stack_chk_fail_local>
    14e2:	c9                   	leave  
    14e3:	c3                   	ret    

000014e4 <main>:
    14e4:	f3 0f 1e fb          	endbr32 
    14e8:	8d 4c 24 04          	lea    0x4(%esp),%ecx
    14ec:	83 e4 f0             	and    $0xfffffff0,%esp
    14ef:	ff 71 fc             	pushl  -0x4(%ecx)
    14f2:	55                   	push   %ebp
    14f3:	89 e5                	mov    %esp,%ebp
    14f5:	57                   	push   %edi
    14f6:	56                   	push   %esi
    14f7:	53                   	push   %ebx
    14f8:	51                   	push   %ecx
    14f9:	83 ec 48             	sub    $0x48,%esp
    14fc:	e8 4f fc ff ff       	call   1150 <__x86.get_pc_thunk.bx>
    1501:	81 c3 c7 2a 00 00    	add    $0x2ac7,%ebx
    1507:	89 c8                	mov    %ecx,%eax
    1509:	8b 40 04             	mov    0x4(%eax),%eax
    150c:	89 45 b4             	mov    %eax,-0x4c(%ebp)
    150f:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
    1515:	89 45 e4             	mov    %eax,-0x1c(%ebp)
    1518:	31 c0                	xor    %eax,%eax
    151a:	83 ec 0c             	sub    $0xc,%esp
    151d:	6a 18                	push   $0x18
    151f:	e8 ac fb ff ff       	call   10d0 <malloc@plt>
    1524:	83 c4 10             	add    $0x10,%esp
    1527:	89 45 c4             	mov    %eax,-0x3c(%ebp)
    152a:	83 ec 0c             	sub    $0xc,%esp
    152d:	8d 83 74 e0 ff ff    	lea    -0x1f8c(%ebx),%eax
    1533:	50                   	push   %eax
    1534:	e8 77 fb ff ff       	call   10b0 <printf@plt>
    1539:	83 c4 10             	add    $0x10,%esp
    153c:	c7 45 c0 00 00 00 00 	movl   $0x0,-0x40(%ebp)
    1543:	eb 28                	jmp    156d <main+0x89>
    1545:	8b 45 c0             	mov    -0x40(%ebp),%eax
    1548:	8d 50 01             	lea    0x1(%eax),%edx
    154b:	89 55 c0             	mov    %edx,-0x40(%ebp)
    154e:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
    1555:	8b 45 c4             	mov    -0x3c(%ebp),%eax
    1558:	01 d0                	add    %edx,%eax
    155a:	83 ec 08             	sub    $0x8,%esp
    155d:	50                   	push   %eax
    155e:	8d 83 88 e0 ff ff    	lea    -0x1f78(%ebx),%eax
    1564:	50                   	push   %eax
    1565:	e8 96 fb ff ff       	call   1100 <__isoc99_scanf@plt>
    156a:	83 c4 10             	add    $0x10,%esp
    156d:	83 7d c0 05          	cmpl   $0x5,-0x40(%ebp)
    1571:	7e d2                	jle    1545 <main+0x61>
    1573:	8b 45 c4             	mov    -0x3c(%ebp),%eax
    1576:	83 c0 14             	add    $0x14,%eax
    1579:	8b 00                	mov    (%eax),%eax
    157b:	89 45 b0             	mov    %eax,-0x50(%ebp)
    157e:	8b 45 c4             	mov    -0x3c(%ebp),%eax
    1581:	83 c0 10             	add    $0x10,%eax
    1584:	8b 38                	mov    (%eax),%edi
    1586:	8b 45 c4             	mov    -0x3c(%ebp),%eax
    1589:	83 c0 0c             	add    $0xc,%eax
    158c:	8b 30                	mov    (%eax),%esi
    158e:	8b 45 c4             	mov    -0x3c(%ebp),%eax
    1591:	83 c0 08             	add    $0x8,%eax
    1594:	8b 08                	mov    (%eax),%ecx
    1596:	8b 45 c4             	mov    -0x3c(%ebp),%eax
    1599:	83 c0 04             	add    $0x4,%eax
    159c:	8b 10                	mov    (%eax),%edx
    159e:	8b 45 c4             	mov    -0x3c(%ebp),%eax
    15a1:	8b 00                	mov    (%eax),%eax
    15a3:	83 ec 04             	sub    $0x4,%esp
    15a6:	ff 75 b0             	pushl  -0x50(%ebp)
    15a9:	57                   	push   %edi
    15aa:	56                   	push   %esi
    15ab:	51                   	push   %ecx
    15ac:	52                   	push   %edx
    15ad:	50                   	push   %eax
    15ae:	8d 83 8c e0 ff ff    	lea    -0x1f74(%ebx),%eax
    15b4:	50                   	push   %eax
    15b5:	e8 f6 fa ff ff       	call   10b0 <printf@plt>
    15ba:	83 c4 20             	add    $0x20,%esp
    15bd:	e8 e7 fc ff ff       	call   12a9 <f0>
    15c2:	89 45 c8             	mov    %eax,-0x38(%ebp)
    15c5:	e8 f7 fc ff ff       	call   12c1 <f1>
    15ca:	89 45 cc             	mov    %eax,-0x34(%ebp)
    15cd:	83 ec 0c             	sub    $0xc,%esp
    15d0:	6a 06                	push   $0x6
    15d2:	e8 72 fd ff ff       	call   1349 <f2>
    15d7:	83 c4 10             	add    $0x10,%esp
    15da:	89 45 d0             	mov    %eax,-0x30(%ebp)
    15dd:	c7 45 d4 d6 8e 00 00 	movl   $0x8ed6,-0x2c(%ebp)
    15e4:	8b 45 d4             	mov    -0x2c(%ebp),%eax
    15e7:	83 ec 08             	sub    $0x8,%esp
    15ea:	8d 55 c8             	lea    -0x38(%ebp),%edx
    15ed:	83 c2 0c             	add    $0xc,%edx
    15f0:	52                   	push   %edx
    15f1:	50                   	push   %eax
    15f2:	e8 99 fd ff ff       	call   1390 <f3>
    15f7:	83 c4 10             	add    $0x10,%esp
    15fa:	83 ec 04             	sub    $0x4,%esp
    15fd:	68 d7 03 00 00       	push   $0x3d7
    1602:	68 46 03 00 00       	push   $0x346
    1607:	68 0f 03 00 00       	push   $0x30f
    160c:	e8 d9 fd ff ff       	call   13ea <f4>
    1611:	83 c4 10             	add    $0x10,%esp
    1614:	89 45 d8             	mov    %eax,-0x28(%ebp)
    1617:	83 ec 0c             	sub    $0xc,%esp
    161a:	8d 45 c8             	lea    -0x38(%ebp),%eax
    161d:	50                   	push   %eax
    161e:	e8 11 fe ff ff       	call   1434 <f5>
    1623:	83 c4 10             	add    $0x10,%esp
    1626:	c7 45 c0 ff ff ff ff 	movl   $0xffffffff,-0x40(%ebp)
    162d:	eb 3a                	jmp    1669 <main+0x185>
    162f:	8b 45 c0             	mov    -0x40(%ebp),%eax
    1632:	8b 54 85 c8          	mov    -0x38(%ebp,%eax,4),%edx
    1636:	8b 45 c0             	mov    -0x40(%ebp),%eax
    1639:	8d 0c 85 00 00 00 00 	lea    0x0(,%eax,4),%ecx
    1640:	8b 45 c4             	mov    -0x3c(%ebp),%eax
    1643:	01 c8                	add    %ecx,%eax
    1645:	8b 00                	mov    (%eax),%eax
    1647:	83 ec 04             	sub    $0x4,%esp
    164a:	ff 75 c0             	pushl  -0x40(%ebp)
    164d:	52                   	push   %edx
    164e:	50                   	push   %eax
    164f:	e8 f9 fb ff ff       	call   124d <Is_Number_Correct>
    1654:	83 c4 10             	add    $0x10,%esp
    1657:	83 f8 01             	cmp    $0x1,%eax
    165a:	75 0d                	jne    1669 <main+0x185>
    165c:	8b 45 c4             	mov    -0x3c(%ebp),%eax
    165f:	83 c0 18             	add    $0x18,%eax
    1662:	8b 10                	mov    (%eax),%edx
    1664:	83 c2 01             	add    $0x1,%edx
    1667:	89 10                	mov    %edx,(%eax)
    1669:	8b 45 c0             	mov    -0x40(%ebp),%eax
    166c:	8d 50 01             	lea    0x1(%eax),%edx
    166f:	89 55 c0             	mov    %edx,-0x40(%ebp)
    1672:	83 f8 04             	cmp    $0x4,%eax
    1675:	7e b8                	jle    162f <main+0x14b>
    1677:	8b 45 c4             	mov    -0x3c(%ebp),%eax
    167a:	83 c0 18             	add    $0x18,%eax
    167d:	8b 00                	mov    (%eax),%eax
    167f:	83 f8 06             	cmp    $0x6,%eax
    1682:	75 14                	jne    1698 <main+0x1b4>
    1684:	83 ec 0c             	sub    $0xc,%esp
    1687:	8d 83 ac e0 ff ff    	lea    -0x1f54(%ebx),%eax
    168d:	50                   	push   %eax
    168e:	e8 4d fa ff ff       	call   10e0 <puts@plt>
    1693:	83 c4 10             	add    $0x10,%esp
    1696:	eb 3b                	jmp    16d3 <main+0x1ef>
    1698:	8b 45 c4             	mov    -0x3c(%ebp),%eax
    169b:	83 c0 18             	add    $0x18,%eax
    169e:	8b 00                	mov    (%eax),%eax
    16a0:	85 c0                	test   %eax,%eax
    16a2:	75 14                	jne    16b8 <main+0x1d4>
    16a4:	83 ec 0c             	sub    $0xc,%esp
    16a7:	8d 83 d0 e0 ff ff    	lea    -0x1f30(%ebx),%eax
    16ad:	50                   	push   %eax
    16ae:	e8 2d fa ff ff       	call   10e0 <puts@plt>
    16b3:	83 c4 10             	add    $0x10,%esp
    16b6:	eb 1b                	jmp    16d3 <main+0x1ef>
    16b8:	8b 45 c4             	mov    -0x3c(%ebp),%eax
    16bb:	83 c0 18             	add    $0x18,%eax
    16be:	8b 00                	mov    (%eax),%eax
    16c0:	83 ec 08             	sub    $0x8,%esp
    16c3:	50                   	push   %eax
    16c4:	8d 83 08 e1 ff ff    	lea    -0x1ef8(%ebx),%eax
    16ca:	50                   	push   %eax
    16cb:	e8 e0 f9 ff ff       	call   10b0 <printf@plt>
    16d0:	83 c4 10             	add    $0x10,%esp
    16d3:	b8 00 00 00 00       	mov    $0x0,%eax
    16d8:	8b 75 e4             	mov    -0x1c(%ebp),%esi
    16db:	65 33 35 14 00 00 00 	xor    %gs:0x14,%esi
    16e2:	74 05                	je     16e9 <main+0x205>
    16e4:	e8 97 00 00 00       	call   1780 <__stack_chk_fail_local>
    16e9:	8d 65 f0             	lea    -0x10(%ebp),%esp
    16ec:	59                   	pop    %ecx
    16ed:	5b                   	pop    %ebx
    16ee:	5e                   	pop    %esi
    16ef:	5f                   	pop    %edi
    16f0:	5d                   	pop    %ebp
    16f1:	8d 61 fc             	lea    -0x4(%ecx),%esp
    16f4:	c3                   	ret    

000016f5 <__x86.get_pc_thunk.ax>:
    16f5:	8b 04 24             	mov    (%esp),%eax
    16f8:	c3                   	ret    
    16f9:	66 90                	xchg   %ax,%ax
    16fb:	66 90                	xchg   %ax,%ax
    16fd:	66 90                	xchg   %ax,%ax
    16ff:	90                   	nop

00001700 <__libc_csu_init>:
    1700:	f3 0f 1e fb          	endbr32 
    1704:	55                   	push   %ebp
    1705:	e8 6b 00 00 00       	call   1775 <__x86.get_pc_thunk.bp>
    170a:	81 c5 be 28 00 00    	add    $0x28be,%ebp
    1710:	57                   	push   %edi
    1711:	56                   	push   %esi
    1712:	53                   	push   %ebx
    1713:	83 ec 0c             	sub    $0xc,%esp
    1716:	89 eb                	mov    %ebp,%ebx
    1718:	8b 7c 24 28          	mov    0x28(%esp),%edi
    171c:	e8 df f8 ff ff       	call   1000 <_init>
    1721:	8d 9d 04 ff ff ff    	lea    -0xfc(%ebp),%ebx
    1727:	8d 85 00 ff ff ff    	lea    -0x100(%ebp),%eax
    172d:	29 c3                	sub    %eax,%ebx
    172f:	c1 fb 02             	sar    $0x2,%ebx
    1732:	74 29                	je     175d <__libc_csu_init+0x5d>
    1734:	31 f6                	xor    %esi,%esi
    1736:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    173d:	8d 76 00             	lea    0x0(%esi),%esi
    1740:	83 ec 04             	sub    $0x4,%esp
    1743:	57                   	push   %edi
    1744:	ff 74 24 2c          	pushl  0x2c(%esp)
    1748:	ff 74 24 2c          	pushl  0x2c(%esp)
    174c:	ff 94 b5 00 ff ff ff 	call   *-0x100(%ebp,%esi,4)
    1753:	83 c6 01             	add    $0x1,%esi
    1756:	83 c4 10             	add    $0x10,%esp
    1759:	39 f3                	cmp    %esi,%ebx
    175b:	75 e3                	jne    1740 <__libc_csu_init+0x40>
    175d:	83 c4 0c             	add    $0xc,%esp
    1760:	5b                   	pop    %ebx
    1761:	5e                   	pop    %esi
    1762:	5f                   	pop    %edi
    1763:	5d                   	pop    %ebp
    1764:	c3                   	ret    
    1765:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
    176c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi

00001770 <__libc_csu_fini>:
    1770:	f3 0f 1e fb          	endbr32 
    1774:	c3                   	ret    

00001775 <__x86.get_pc_thunk.bp>:
    1775:	8b 2c 24             	mov    (%esp),%ebp
    1778:	c3                   	ret    
    1779:	66 90                	xchg   %ax,%ax
    177b:	66 90                	xchg   %ax,%ax
    177d:	66 90                	xchg   %ax,%ax
    177f:	90                   	nop

00001780 <__stack_chk_fail_local>:
    1780:	f3 0f 1e fb          	endbr32 
    1784:	53                   	push   %ebx
    1785:	e8 c6 f9 ff ff       	call   1150 <__x86.get_pc_thunk.bx>
    178a:	81 c3 3e 28 00 00    	add    $0x283e,%ebx
    1790:	83 ec 08             	sub    $0x8,%esp
    1793:	e8 28 f9 ff ff       	call   10c0 <__stack_chk_fail@plt>

Disassembly of section .fini:

00001798 <_fini>:
    1798:	f3 0f 1e fb          	endbr32 
    179c:	53                   	push   %ebx
    179d:	83 ec 08             	sub    $0x8,%esp
    17a0:	e8 ab f9 ff ff       	call   1150 <__x86.get_pc_thunk.bx>
    17a5:	81 c3 23 28 00 00    	add    $0x2823,%ebx
    17ab:	83 c4 08             	add    $0x8,%esp
    17ae:	5b                   	pop    %ebx
    17af:	c3                   	ret    
